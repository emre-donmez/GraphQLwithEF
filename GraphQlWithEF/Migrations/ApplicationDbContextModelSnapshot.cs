// <auto-generated />
using GraphQlwithEF.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GraphQlwithEF.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GraphQlwithEF.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Clothing"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Books"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Home Appliances"
                        });
                });

            modelBuilder.Entity("GraphQlwithEF.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Name = "Laptop",
                            Price = 1200m
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Name = "T-Shirt",
                            Price = 20m
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 4,
                            Name = "Refrigerator",
                            Price = 850m
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 3,
                            Name = "Science Fiction Book",
                            Price = 15m
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            Name = "Smartphone",
                            Price = 800m
                        });
                });

            modelBuilder.Entity("GraphQlwithEF.Models.ProductDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("ProductDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Highperformancelaptop",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Energyefficientrefrigerator",
                            ProductId = 3
                        },
                        new
                        {
                            Id = 3,
                            Description = "Bestsellingsciencefiction novel",
                            ProductId = 4
                        },
                        new
                        {
                            Id = 4,
                            Description = "Latest smartphonemodelwith 5G support",
                            ProductId = 5
                        });
                });

            modelBuilder.Entity("GraphQlwithEF.Models.Product", b =>
                {
                    b.HasOne("GraphQlwithEF.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("GraphQlwithEF.Models.ProductDetail", b =>
                {
                    b.HasOne("GraphQlwithEF.Models.Product", "Product")
                        .WithOne("ProductDetail")
                        .HasForeignKey("GraphQlwithEF.Models.ProductDetail", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("GraphQlwithEF.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("GraphQlwithEF.Models.Product", b =>
                {
                    b.Navigation("ProductDetail")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
